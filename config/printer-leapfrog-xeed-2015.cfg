# This file contains a configuration for the "Leapfrog Xeed"
# printer from 2015. This uses the original control board, which
# is a custom ATmega2560 board created by Leapfrog.
# To use this config, the firmware should be compiled for the AVR atmega2560.

# See the example.cfg file for a description of available parameters.

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

# Xeed connects stepper_x to the X-axis signal-level connector
[stepper_x]
step_pin: ar65
dir_pin: ar64
enable_pin: ar66
step_distance: 0.018
endstop_pin: ^ar47
position_endstop: 0
position_max: 280
homing_speed: 20
homing_retract_dist: 5.0
second_homing_speed: 2.5

# Xeed connects stepper_y to the Y-axis signal-level connector
[stepper_y]
step_pin: ar23
dir_pin: !ar22
enable_pin: ar24
step_distance: 0.018
endstop_pin: ^ar48
position_endstop: 220
position_max: 220
homing_speed: 50
homing_positive_dir: True
homing_speed: 20
homing_retract_dist: 5.0
second_homing_speed: 2.5

# ZMOT connector - Front right motor
[stepper_z]
step_pin: ar31
dir_pin: !ar32
enable_pin: !ar30
step_distance: 0.00078125
endstop_pin: probe:z_virtual_endstop
position_max: 250
position_min: -10
position_endstop: 0
homing_speed: 4
homing_retract_dist: 2.0
second_homing_speed: 1

# XMOT connector - Rear center motor
[stepper_z1]
step_pin: ar28
dir_pin: !ar63
enable_pin: !ar29
step_distance: 0.00078125

# YMOT connector - Front left motor
[stepper_z2]
step_pin: ar14
dir_pin: !ar15
enable_pin: !ar39
step_distance: 0.00078125

[extruder]
step_pin: ar34
dir_pin: ar35
enable_pin: ar33
step_distance: 0.0050352467270896
nozzle_diameter: 0.350
filament_diameter: 1.750
heater_pin: ar9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog13
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 300

[extruder1]
step_pin: ar37
dir_pin: !ar40
enable_pin: ar36
step_distance: 0.0050352467270896
nozzle_diameter: 0.350
filament_diameter: 1.750
heater_pin: ar8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog15
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 300

[heater_bed]
heater_pin: ar6
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog14
control: watermark
min_temp: 0
max_temp: 110

[fan]
pin: ar10

[mcu]
serial: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_A6043ONC-if00-port0
pin_map: arduino


[output_pin probe_solenoid]
pin: ar7

[probe]
pin: ^ar49
x_offset: -14.0
y_offset: 38.0
z_offset: 0.0
speed: 2.0
samples: 2
sample_retract_dist: 2.0
samples_result: average
samples_tolerance: 0.025
samples_tolerance_retries: 3
activate_gcode:
   SET_PIN PIN=probe_solenoid VALUE=1
   G4 P700
deactivate_gcode:
   SET_PIN PIN=probe_solenoid VALUE=0
   G4 P100

# Multiple Z stepper tilt adjustment. This feature enables independent
# adjustment of multiple z steppers (see stepper_z1 section below) to
# adjust for tilt. If this section is present then a Z_TILT_ADJUST
# extended G-Code command becomes available.
[z_tilt]
z_positions:
    359.5, -26.0
    132, 430
    -95.5, -26
#   A list of X,Y coordinates (one per line; subsequent lines
#   indented) describing the location of each bed "pivot point". The
#   "pivot point" is the point where the bed attaches to the given Z
#   stepper. It is described using nozzle coordinates (the XY position
#   of the nozzle if it could move directly above the point). The
#   first entry corresponds to stepper_z, the second to stepper_z1,
#   the third to stepper_z2, etc. This parameter must be provided.
points:
    280, 0
    145, 220
    13, 0
#   A list of X,Y coordinates (one per line; subsequent lines
#   indented) that should be probed during a Z_TILT_ADJUST command.
#   Specify coordinates of the nozzle and be sure the probe is above
#   the bed at the given nozzle coordinates. This parameter must be
#   provided.
speed: 50
#   The speed (in mm/s) of non-probing moves during the calibration.
#   The default is 50.
horizontal_move_z: 10
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
#retries: 0
#   Number of times to retry if the probed points aren't within tolerance
#retry_tolerance: 0
# if retries are enabled then retry if largest and smallest probed points
# differ more than retry_tolerance.
# Note the smallest unit of change here would be a single step. However if you
# are probing more points than steppers then you will likely have a fixed
# minimum value for the range of probed points which you can learn by observing
# command output.

[bed_mesh]
speed: 50
#   The speed (in mm/s) of non-probing moves during the
#   calibration. The default is 50.
horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
min_point: 0, 0
#   Defines the minimum x,y position to probe when for rectangular
#   beds. Note that this refers to the nozzle position, take care that
#   you do not define a point that will move the probe off of the bed.
#   This parameter must be provided for rectangular beds.
max_point: 280, 220
#   Defines the maximum x,y position to probe when for rectangular
#   beds. Follow the same precautions as listed in min_point. Also note
#   that this does not necessarily define the last point probed, only
#   the maximum coordinate. This parameter must be provided.
#probe_count: 3,3
#   For rectangular beds, this is a comma separate pair of integer
#   values (X,Y) defining the number of points to probe along each axis.
#   A single value is also valid, in which case that value will be applied
#   to both axes.  Default is 3,3.
#fade_start: 1.0
#   The gcode z position in which to start phasing out z-adjustment
#   when fade is enabled.  Default is 1.0.
#fade_end: 0.0
#   The gcode z position in which phasing out completes.  When set
#   to a value below fade_start, fade is disabled. It should be
#   noted that fade may add unwanted scaling along the z-axis of a
#   print.  If a user wishes to enable fade, a value of 10.0 is
#   recommended. Default is 0.0, which disables fade.
#fade_target:
#   The z position in which fade should converge. When this value is set
#   to a non-zero value it must be within the range of z-values in the mesh.
#   Users that wish to converge to the z homing position should set this to 0.
#   Default is the average z value of the mesh.
#move_check_distance: 5.0
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
#mesh_pps: 2,2
#   A comma separated pair of integers (X,Y) defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed
#   point. The user may enter a single value which will be applied
#   to both axes.  Default is 2,2.
#algorithm: lagrange
#   The interpolation algorithm to use. May be either "lagrange"
#   or "bicubic". This option will not affect 3x3 grids, which
#   are forced to use lagrange sampling.  Default is lagrange.
#bicubic_tension: .2
#   When using the bicubic algorithm the tension parameter above
#   may be applied to change the amount of slope interpolated.
#   Larger numbers will increase the amount of slope, which
#   results in more curvature in the mesh. Default is .2.
#relative_reference_index:
#   A point index in the mesh to reference all z values to. Enabling
#   this parameter produces a mesh relative to the probed z position
#   at the provided index.

